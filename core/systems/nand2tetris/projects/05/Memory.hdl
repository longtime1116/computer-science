// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // そもそも load が 0 ならば何もしない。1 ならば、RAM から読むか、Screen/Keyboard から読むか のどっちか
    // address[14] が0なら RAM から読む。 address[14] が1なら Screen/Keyboard から読む
    // address[13] がjなら Screen から読む。 address[13] が0なら Keyboard から読む
    DMux(in = load, sel = address[14], a = iRAM, b = iIO);
    DMux(in = iIO, sel = address[13], a = iScreen, b = iKeyboard);

    RAM16K(in = in, load = iRAM, address = address[0..13], out = oRAM);
    Screen(in = in, load = iScreen, address = address[0..12], out = oScreen);
    Keyboard(out = oKeyboard);

    Mux16(a = oScreen, b = oKeyboard, sel = address[13], out = oIO);
    Mux16(a = oRAM, b = oIO, sel = address[14], out = out);
}
